.. SPDX-License-Identifier: GPL-2.0
.. NOTE: This document was auto-generated.


====================================
Family ``fou`` netlink specification
====================================


.. contents::


-------
Summary
-------


Foo-over-UDP.


----------
Operations
----------



unspec
======
unused

:value: 0



add
===
Add port.

:attribute-set: fou
:dont-validate: ['strict', 'dump']
:flags: ['admin-perm']
:do:
    **request**
        :attributes: [``port``, ``ipproto``, ``type``, ``remcsum_nopartial``, ``local_v4``, ``peer_v4``, ``local_v6``, ``peer_v6``, ``peer_port``, ``ifindex``]




del
===
Delete port.

:attribute-set: fou
:dont-validate: ['strict', 'dump']
:flags: ['admin-perm']
:do:
    **request**
        :attributes: [``af``, ``ifindex``, ``port``, ``peer_port``, ``local_v4``, ``peer_v4``, ``local_v6``, ``peer_v6``]




get
===
Get tunnel info.

:attribute-set: fou
:dont-validate: ['strict', 'dump']
:do:
    **request**
        :attributes: [``af``, ``ifindex``, ``port``, ``peer_port``, ``local_v4``, ``peer_v4``, ``local_v6``, ``peer_v6``]

    **reply**
        :attributes: [``port``, ``ipproto``, ``type``, ``remcsum_nopartial``, ``local_v4``, ``peer_v4``, ``local_v6``, ``peer_v6``, ``peer_port``, ``ifindex``]

:dump:
    **reply**
        :attributes: [``port``, ``ipproto``, ``type``, ``remcsum_nopartial``, ``local_v4``, ``peer_v4``, ``local_v6``, ``peer_v6``, ``peer_port``, ``ifindex``]




-----------
Definitions
-----------



encap_type
==========
:type: enum
:name-prefix: fou-encap-
:enum-name: None


:entries:
    - ``unspec``
    - ``direct``
    - ``gue``



--------------
Attribute sets
--------------



fou
===
unspec (``unused``)
~~~~~~~~~~~~~~~~~~~
:value: 0


port (``u16``)
~~~~~~~~~~~~~~
:byte-order: big-endian


af (``u8``)
~~~~~~~~~~~


ipproto (``u8``)
~~~~~~~~~~~~~~~~


type (``u8``)
~~~~~~~~~~~~~


remcsum_nopartial (``flag``)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


local_v4 (``u32``)
~~~~~~~~~~~~~~~~~~


local_v6 (``binary``)
~~~~~~~~~~~~~~~~~~~~~


peer_v4 (``u32``)
~~~~~~~~~~~~~~~~~


peer_v6 (``binary``)
~~~~~~~~~~~~~~~~~~~~


peer_port (``u16``)
~~~~~~~~~~~~~~~~~~~
:byte-order: big-endian


ifindex (``s32``)
~~~~~~~~~~~~~~~~~

