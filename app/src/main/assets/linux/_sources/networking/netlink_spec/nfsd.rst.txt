.. SPDX-License-Identifier: GPL-2.0
.. NOTE: This document was auto-generated.


=====================================
Family ``nfsd`` netlink specification
=====================================


.. contents:: :depth: 3


-------
Summary
-------


NFSD configuration over generic netlink.

----------
Operations
----------


.. _nfsd-operation-rpc-status-get:

rpc-status-get
==============
dump pending nfsd rpc

:attribute-set: :ref:`nfsd-attribute-set-rpc-status`
:dump:
    **reply**
        :attributes: [``xid``, ``flags``, ``prog``, ``version``, ``proc``, ``service_time``, ``saddr4``, ``daddr4``, ``saddr6``, ``daddr6``, ``sport``, ``dport``, ``compound-ops``]



.. _nfsd-operation-threads-set:

threads-set
===========
set the number of running threads

:attribute-set: :ref:`nfsd-attribute-set-server`
:flags: ['admin-perm']
:do:
    **request**
        :attributes: [``threads``, ``gracetime``, ``leasetime``, ``scope``]



.. _nfsd-operation-threads-get:

threads-get
===========
get the number of running threads

:attribute-set: :ref:`nfsd-attribute-set-server`
:do:
    **reply**
        :attributes: [``threads``, ``gracetime``, ``leasetime``, ``scope``]



.. _nfsd-operation-version-set:

version-set
===========
set nfs enabled versions

:attribute-set: :ref:`nfsd-attribute-set-server-proto`
:flags: ['admin-perm']
:do:
    **request**
        :attributes: [``version``]



.. _nfsd-operation-version-get:

version-get
===========
get nfs enabled versions

:attribute-set: :ref:`nfsd-attribute-set-server-proto`
:do:
    **reply**
        :attributes: [``version``]



.. _nfsd-operation-listener-set:

listener-set
============
set nfs running sockets

:attribute-set: :ref:`nfsd-attribute-set-server-sock`
:flags: ['admin-perm']
:do:
    **request**
        :attributes: [``addr``]



.. _nfsd-operation-listener-get:

listener-get
============
get nfs running listeners

:attribute-set: :ref:`nfsd-attribute-set-server-sock`
:do:
    **reply**
        :attributes: [``addr``]




--------------
Attribute sets
--------------


.. _nfsd-attribute-set-rpc-status:

rpc-status
==========
xid (``u32``)
~~~~~~~~~~~~~
:byte-order: big-endian


flags (``u32``)
~~~~~~~~~~~~~~~


prog (``u32``)
~~~~~~~~~~~~~~


version (``u8``)
~~~~~~~~~~~~~~~~


proc (``u32``)
~~~~~~~~~~~~~~


service_time (``s64``)
~~~~~~~~~~~~~~~~~~~~~~


pad (``pad``)
~~~~~~~~~~~~~


saddr4 (``u32``)
~~~~~~~~~~~~~~~~
:byte-order: big-endian
:display-hint: ipv4


daddr4 (``u32``)
~~~~~~~~~~~~~~~~
:byte-order: big-endian
:display-hint: ipv4


saddr6 (``binary``)
~~~~~~~~~~~~~~~~~~~
:display-hint: ipv6


daddr6 (``binary``)
~~~~~~~~~~~~~~~~~~~
:display-hint: ipv6


sport (``u16``)
~~~~~~~~~~~~~~~
:byte-order: big-endian


dport (``u16``)
~~~~~~~~~~~~~~~
:byte-order: big-endian


compound-ops (``u32``)
~~~~~~~~~~~~~~~~~~~~~~
:multi-attr: True


.. _nfsd-attribute-set-server:

server
======
threads (``u32``)
~~~~~~~~~~~~~~~~~
:multi-attr: True


gracetime (``u32``)
~~~~~~~~~~~~~~~~~~~


leasetime (``u32``)
~~~~~~~~~~~~~~~~~~~


scope (``string``)
~~~~~~~~~~~~~~~~~~


.. _nfsd-attribute-set-version:

version
=======
major (``u32``)
~~~~~~~~~~~~~~~


minor (``u32``)
~~~~~~~~~~~~~~~


enabled (``flag``)
~~~~~~~~~~~~~~~~~~


.. _nfsd-attribute-set-server-proto:

server-proto
============
version (``nest``)
~~~~~~~~~~~~~~~~~~
:nested-attributes: :ref:`nfsd-attribute-set-version`
:multi-attr: True


.. _nfsd-attribute-set-sock:

sock
====
addr (``binary``)
~~~~~~~~~~~~~~~~~


transport-name (``string``)
~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. _nfsd-attribute-set-server-sock:

server-sock
===========
addr (``nest``)
~~~~~~~~~~~~~~~
:nested-attributes: :ref:`nfsd-attribute-set-sock`
:multi-attr: True

