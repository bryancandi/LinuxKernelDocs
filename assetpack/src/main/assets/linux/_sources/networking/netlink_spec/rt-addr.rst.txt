.. SPDX-License-Identifier: GPL-2.0
.. NOTE: This document was auto-generated.


========================================
Family ``rt-addr`` netlink specification
========================================


.. contents:: :depth: 3


-------
Summary
-------


Address configuration over rtnetlink.

----------
Operations
----------


.. _rt-addr-operation-newaddr:

newaddr
=======
Add new address

:attribute-set: :ref:`rt-addr-attribute-set-addr-attrs`
:do:
    **request**
        :attributes: [``address``, ``label``, ``local``, ``cacheinfo``]



.. _rt-addr-operation-deladdr:

deladdr
=======
Remove address

:attribute-set: :ref:`rt-addr-attribute-set-addr-attrs`
:do:
    **request**
        :attributes: [``address``, ``local``]



.. _rt-addr-operation-getaddr:

getaddr
=======
Dump address information.

:attribute-set: :ref:`rt-addr-attribute-set-addr-attrs`
:dump:
    **request**
        :attributes: []

    **reply**
        :attributes: [``address``, ``label``, ``local``, ``cacheinfo``]



.. _rt-addr-operation-getmulticast:

getmulticast
============
Get / dump IPv4/IPv6 multicast addresses.

:attribute-set: :ref:`rt-addr-attribute-set-addr-attrs`
:fixed-header: :ref:`rt-addr-definition-ifaddrmsg`
:do:
    **request**
        :attributes: []

    **reply**
        :attributes: [``multicast``, ``cacheinfo``]

:dump:
    **request**
        :attributes: []

    **reply**
        :attributes: [``multicast``, ``cacheinfo``]




----------------
Multicast groups
----------------


- rtnlgrp-ipv4-ifaddr
- rtnlgrp-ipv6-ifaddr

-----------
Definitions
-----------


.. _rt-addr-definition-ifaddrmsg:

ifaddrmsg
=========
:type: struct


:members:
    :ifa-family (``u8``): 
    :ifa-prefixlen (``u8``): 
    :ifa-flags (``u8``): 
    :ifa-scope (``u8``): 
    :ifa-index (``u32``): 


.. _rt-addr-definition-ifa-cacheinfo:

ifa-cacheinfo
=============
:type: struct


:members:
    :ifa-prefered (``u32``): 
    :ifa-valid (``u32``): 
    :cstamp (``u32``): 
    :tstamp (``u32``): 


.. _rt-addr-definition-ifa-flags:

ifa-flags
=========
:type: flags
:name-prefix: ifa-f-
:enum-name: None


:entries:
    :secondary: 
    :nodad: 
    :optimistic: 
    :dadfailed: 
    :homeaddress: 
    :deprecated: 
    :tentative: 
    :permanent: 
    :managetempaddr: 
    :noprefixroute: 
    :mcautojoin: 
    :stable-privacy: 



--------------
Attribute sets
--------------


.. _rt-addr-attribute-set-addr-attrs:

addr-attrs
==========
address (``binary``)
~~~~~~~~~~~~~~~~~~~~
:display-hint: ipv4


local (``binary``)
~~~~~~~~~~~~~~~~~~
:display-hint: ipv4


label (``string``)
~~~~~~~~~~~~~~~~~~


broadcast (``binary``)
~~~~~~~~~~~~~~~~~~~~~~
:display-hint: ipv4


anycast (``binary``)
~~~~~~~~~~~~~~~~~~~~


cacheinfo (``binary``)
~~~~~~~~~~~~~~~~~~~~~~
:struct: :ref:`rt-addr-definition-ifa-cacheinfo`


multicast (``binary``)
~~~~~~~~~~~~~~~~~~~~~~


flags (``u32``)
~~~~~~~~~~~~~~~
:enum: :ref:`rt-addr-definition-ifa-flags`
:enum-as-flags: True


rt-priority (``u32``)
~~~~~~~~~~~~~~~~~~~~~


target-netnsid (``binary``)
~~~~~~~~~~~~~~~~~~~~~~~~~~~


proto (``u8``)
~~~~~~~~~~~~~~

